{% import 'macros/colour.' + itemFilter.templateExtension as colour with context -%}

{# Output tier colours for a given category and tier level. #}
{%- macro output(type, tier) -%}

  {%- set typeConfig = itemFilter.tieredSchemes[type] -%}

  {%- set tierValues = typeConfig.tiers[tier] -%}

  {%- if typeConfig.rarityColour != True -%}
  SetTextColor        {{ colour.format(tierValues.text) }}
  {%- endif %}
  SetBorderColor      {{ colour.format(tierValues.border) }}
  {#- @todo Move this to the Python script and make configurable per-tier. #}
  {%- if tier == 'e' %}
  SetBackgroundColor  {{ colour.format(tierValues.background, 210) }}
  {%- else %}
  SetBackgroundColor  {{ colour.format(tierValues.background, 240) }}
  {%- endif %}
  {% if 'sound' in tierValues -%}
  CustomAlertSoundOptional "{{ tierValues.sound }}"
  {%- endif -%}

{%- endmacro -%}
