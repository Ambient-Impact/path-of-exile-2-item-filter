{% import 'macros/tiered_scheme.' + itemFilter.templateExtension as tieredScheme with context -%}
{% import 'macros/utilities.' + itemFilter.templateExtension as utilities -%}

{#- Endgame armour that have different implicits list the top tier with that
   implicit. Armour that aren't differentiated by their implicits list the
   single highest only. -#}
{%- set body = [
  'Austere Garb',
  'Conjurer Mantle',
  'Corsair Coat',
  'Dastard Armour',
  'Death Mail',
  'Death Mantle',
  'Falconer\'s Jacket',
  'Feathered Raiment',
  'Flowing Raiment',
  'Ornate Plate',
  'Rambler Jacket',
  'Sacramental Robe',
  'Seastorm Mantle',
  'Shrouded Mail',
  'Swiftstalker Coat',
  'Thane Mail',
  'Utzaal Cuirass',
  'Warlord Cuirass',
  'Wyrmscale Coat',
] -%}
{%- set helmets = [
  'Ancestral Tiara',
  'Cryptic Crown',
  'Freebooter Cap',
  'Gladiatorial Helm',
  'Grinning Mask',
  'Imperial Greathelm',
] -%}
{%- set gloves = [
  'Adherent Cuffs',
  'Blacksteel Gauntlets',
  'Massive Mitts',
  'Polished Bracers',
  'Secured Wraps',
  'Sirenscale Gloves',
] -%}
{%- set boots = [
  'Blacksteel Sabatons',
  'Cryptic Leggings',
  'Daggerfoot Shoes',
  'Drakeskin Boots',
  'Sekhema Sandals',
  'Tasalian Greaves',
] %}
{%- set bucklers = [
  'Desert Buckler',
] %}
{%- set foci = [
  'Tasalian Focus',
] %}
{%- set shields = [
  'Blacksteel Crest Shield',
  'Golden Targe',
  'Tawhoan Tower Shield',
] -%}

{#- Endgame weapons that have different implicits list the top tier with that
   implicit. Weapons that aren't differentiated by their implicits list the
   single highest only. -#}
{%- set axes = [
  'Dread Hatchet',
] %}
{%- set bows = [
  'Fanatic Bow',
  'Gemini Bow',
  'Guardian Bow',
  'Obliterator Bow',
  'Warmonger Bow',
] %}
{%- set crossbows = [
  'Elegant Crossbow',
  'Gemini Crossbow',
  'Siege Crossbow',
] %}
{%- set maces = [
  'Akoyan Club',
  'Fanatic Greathammer',
  'Fortified Hammer',
  'Molten Hammer',
  'Ruination Maul',
  'Strife Pick',
  'Tawhoan Greatclub',
] %}
{%- set quarterstaves = [
  'Aegis Quarterstaff',
  'Bolting Quarterstaff',
  'Dreaming Quarterstaff',
] %}
{%- set spears = [
  'Akoyan Spear',
  'Flying Spear',
  'Grand Spear',
  'Stalking Spear',
] %}

Show
  BaseType          {{ utilities.quotedSequence(
    body + helmets + gloves + boots + bucklers + foci + shields + axes + bows +
    crossbows + maces + quarterstaves + spears
  ) }}
  {{ tieredScheme.output('bases', 'c') }}
  PlayEffect        Grey Temp
  MinimapIcon       2 Grey Diamond
  Continue

# Non-ring, non-corrupted items with 21% or higher quality are likely
# exceptional.
Show
  Quality       >= 21
  Class         != Ring
  Corrupted     False
  {{ tieredScheme.output('bases', 'b') }}
  PlayEffect    Grey
  MinimapIcon   1 Grey Diamond
  Continue

{# Shared exceptional criteria and actions. #}
{%- macro exceptional() -%}
  Corrupted     False
  {{ tieredScheme.output('bases', 'b') }}
  PlayEffect    Grey
  MinimapIcon   1 Grey Diamond
  Continue
{%- endmacro -%}

# These normally have a max of one socket. If it's not corrupted, it's probably
# exceptional.
Show
  Class         {{ utilities.quotedSequence([
    'Boots',
    'Bucklers',
    'Dagger',
    'Flail',
    'Foci',
    'Gloves',
    'Helmets',
    'One Hand Axe',
    'One Hand Mace',
    'One Hand Sword',
    'Shields',
    'Spear',
  ]) }}
  Sockets       >= 2
  {{ exceptional() }}

# These normally have a max of two sockets. If it's not corrupted, it's probably
# exceptional.
Show
  Class         {{ utilities.quotedSequence([
    'Body Armours',
    'Bow',
    'Crossbows',
    'Quarterstaff',
    'Staff',
    'Two Hand Axe',
    'Two Hand Mace',
    'Two Hand Sword',
  ]) }}
  Sockets       >= 3
  {{ exceptional() }}
